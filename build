#!/bin/bash

echo " _____ _         __   __                     _ ";
echo "|_   _| |       |  | / /                    | |";
echo "  | | | |__   __|  |/ /  ___ _ __ _ __   ___| |";
echo "  | | | '_ \ / _\`     \ / _ | '__| '_ \ / _ | |";
echo "  | | | | | | (_|  |\  |  __| |  | | | |  __| |";
echo "  \_/ |_| |_|\__,__| \_/\___|_|  |_| |_|\___|_|";
echo "                                                ";
echo "                                                ";
echo "                                                ";

KERNEL_CONFIG="thdkernel-latest_defconfig"
KV=$(make kernelversion)
if [ -z "$@" ]; then
    MAKE_OPTS="-j$(nproc --all)"
else
    MAKE_OPTS="$@"
fi
CCFLAGS="-march=skylake -mtune=skylake -O2 -pipe -msse -msse2 -msse3 -mmmx -m3dnow"
CCXXFLAGS="$CFLAGS"
CC="/usr/bin/gcc $CCFLAGS"
CXX="/usr/bin/g++ $CCFLAGS"
HOSTCC=$CC
# end of compilation options

echo "Preparing for compiling kernel ThdKernel-${KV}..."

rm -rf ../linux*.gz

make -s clean
make -s mrproper

touch .scmversion

# Time measurement
# UNIX timestamp concatenated with nanoseconds
T="$(date +%s%N)"

# Compilation process
make O=out ${MAKE_OPTS} CFLAGS="${CCFLAGS}" CXXFLAGS="${CCXXFLAGS}" distclean ${KERNEL_CONFIG} prepare all bindeb-pkg
RT=$?

if [ ! "$RT" -eq 0 ]; then
    echo "There was an error during compilation... aborting"
    exit $RT
fi
echo "Creating tools package..."
cd tools/
make cpupower intel-speed-select pci bootconfig tmon usb x86_energy_perf_policy wmi freefall perf
sudo checkinstall -D --pkgname "linux-tools-thdkernel-${KV}" --pkgversion "${KV}" --pakdir .. --gzman -y --install=no --maintainer dev@javinator9889.com --exclude /root --exclude /media make cpupower_install intel-speed-select_install pci_install bootconfig_install tmon_install usb_install x86_energy_perf_policy_install wmi_install freefall_install perf_install
make clean
cd ..
sudo chown $USER:$USER *.deb

RT=$?

if [ ! "$RT" -eq 0 ]; then
    echo "There was an error during compilation... exiting"
    exit $RT
fi

# Time interval in nanoseconds
T="$(($(date +%s%N)-T))"
# Seconds
S="$((T/1000000000))"
# Milliseconds
M="$((T/1000000))"

printf "Compilation process took: "

if [ ! $((S/86400)) -eq 0 ]; then
    printf "%02dd " "$((S/86400))"
fi

if [ ! $((S/3600%24)) -eq 0 ]; then
    printf "%02dh " "$((S/3600%24))"
fi

if [ ! $((S/60%60)) -eq 0 ]; then
    printf "%02dm " "$((S/60%60))"
fi

printf "%02ds\n" "$((S%60))"

echo " _____ _         __   __                     _ ";
echo "|_   _| |       |  | / /                    | |";
echo "  | | | |__   __|  |/ /  ___ _ __ _ __   ___| |";
echo "  | | | '_ \ / _\`     \ / _ | '__| '_ \ / _ | |";
echo "  | | | | | | (_|  |\  |  __| |  | | | |  __| |";
echo "  \_/ |_| |_|\__,__| \_/\___|_|  |_| |_|\___|_|";
echo "                                                ";
echo "                                                ";
echo "                                                ";

